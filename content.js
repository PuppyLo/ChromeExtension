// content.js

// –•—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã .flag-icons
let lastFlags = Array.from(document.querySelectorAll('.flag-icons'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –æ—Ä–¥–µ—Ä–µ
function notifyNewOrder(newFlag) {
  chrome.runtime.sendMessage({
    type: "new_order",
    message: "–ù–æ–≤—ã–π –æ—Ä–¥–µ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω!"
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ .flag-icons
function checkForNewFlags(mutations) {
  mutations.forEach((mutation) => {
    if (mutation.addedNodes.length > 0) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —É–∑–ª—ã
      mutation.addedNodes.forEach((node) => {
        if (node.classList && node.classList.contains('flag-icons')) {
          // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç .flag-icons
          if (!lastFlags.includes(node)) {
            notifyNewOrder(node);
            lastFlags.push(node); // –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
          }
        } else if (node.children) {
          // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
          const newFlags = Array.from(node.querySelectorAll('.flag-icons')).filter(
            (flag) => !lastFlags.includes(flag)
          );
          newFlags.forEach(notifyNewOrder);
          lastFlags = lastFlags.concat(newFlags);
        }
      });
    }
  });
}

// –°–æ–∑–¥–∞–µ–º MutationObserver
const observer = new MutationObserver(checkForNewFlags);

// –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ body (–∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
observer.observe(document.body, {
  childList: true, // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  subtree: true    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –ø–æ—Ç–æ–º–∫–∞—Ö
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const initialFlags = Array.from(document.querySelectorAll('.flag-icons'));
if (initialFlags.length > lastFlags.length) {
  initialFlags.slice(lastFlags.length).forEach(notifyNewOrder);
  lastFlags = initialFlags;
}

// // –î–æ–∂–∏–¥–∞–µ–º—Å—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
// document.addEventListener("DOMContentLoaded", () => {
//     console.log("DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç...");


//     // –ù–∞—Å—Ç—Ä–æ–∏–º MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ `flag-icons`
//     function observeFlagIcons() {
//         const flagIcon = document.querySelector('.flag-icons');
//         console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .flag-icons...", flagIcon);

//         if (flagIcon) {
//             console.log("‚úÖ –≠–ª–µ–º–µ–Ω—Ç .flag-icons –Ω–∞–π–¥–µ–Ω!", flagIcon.textContent);

//             const observer = new MutationObserver((mutations) => {
//                 mutations.forEach((mutation) => {
//                     console.log("üîÑ MutationObserver —Å—Ä–∞–±–æ—Ç–∞–ª! –¢–∏–ø:", mutation.type);
//                     console.log("üìù –°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", mutation.oldValue);
//                     console.log("üÜï –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", flagIcon.textContent);
//                     checkForNewOrders();
//                 });
//             });

//             observer.observe(flagIcon, {
//                 childList: true, // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –¥–µ—Ç–µ–π
//                 subtree: true, // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤–Ω—É—Ç—Ä–∏
//                 characterData: true, // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞
//                 characterDataOldValue: true // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
//             });
//         } else {
//             console.warn("‚è≥ –≠–ª–µ–º–µ–Ω—Ç .flag-icons –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–∂–∏–¥–∞–µ–º...");
//             setTimeout(observeFlagIcons, 1000);
//         }
//     }


//     function checkForNewOrders() {
//         console.log("üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥...");

//         const flagIcon = document.querySelector('.flag-icons');
//         if (flagIcon) {
//             const orderCount = parseInt(flagIcon.textContent.trim(), 10);
//             console.log("üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ä–¥–µ—Ä–æ–≤:", orderCount);

//             if (!isNaN(orderCount) && orderCount > 0) {
//                 console.log("üöÄ –ù–æ–≤—ã–π –æ—Ä–¥–µ—Ä! –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ...");
//                 chrome.runtime.sendMessage({ action: 'newOrder' });
//             } else {
//                 console.log("üîπ –û—Ä–¥–µ—Ä–æ–≤ –Ω–µ—Ç (orderCount = 0)");
//             }
//         } else {
//             console.warn("‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç .flag-icons –Ω–µ –Ω–∞–π–¥–µ–Ω!");
//         }
//     }

//     // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫—É
//     observeFlagIcons();
//     checkForNewOrders();
// });

// // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞
// chrome.runtime.onMessage.addListener((request) => {
//     if (request.action === "playSound") {
//         const audioUrl = chrome.runtime.getURL("notification.mp3");
//         console.log("–ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫:", audioUrl);

//         const audio = new Audio(audioUrl);

//         audio.play().then(() => {
//             console.log("–ó–≤—É–∫ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω!");
//         }).catch((error) => {
//             console.error("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", error);
//         });
//     }
// });
